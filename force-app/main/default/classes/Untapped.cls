//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class Untapped {

    /** 
     * Basic connection details
     **/
    public class Connection {
        public String ClientId {get; private set;}
        public String ClientSecret {get; private set;}
        public Connection(String clienntId, String clienntSecret) {
            this.ClientId = clienntId;
            this.ClientSecret = clienntSecret;
        }                
    }

    /**
     * Check coressponnding custom metadata type for Default connection details
     **/
    public static Connection getDefaultConnection() {
        List<UntappedAPIConnection__mdt> connections = 
            [select ClientId__c, ClientSecret__c from UntappedAPIConnection__mdt where DeveloperName = 'Default'];
        if(connections.size()>0) {
            return new Connection(connections[0].ClientId__c, connections[0].ClientSecret__c);
        }
        return null;
    }

	public class Meta {
		public Integer code {get;set;} 
		public Response_time response_time {get;set;} 
		public Init_time init_time {get;set;} 

		public Meta(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'code') {
							code = parser.getIntegerValue();
						} else if (text == 'response_time') {
							response_time = new Response_time(parser);
						} else if (text == 'init_time') {
							init_time = new Init_time(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Meta consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Venue_icon {
		public String sm {get;set;} 
		public String md {get;set;} 
		public String lg {get;set;} 

		public Venue_icon(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'sm') {
							sm = parser.getText();
						} else if (text == 'md') {
							md = parser.getText();
						} else if (text == 'lg') {
							lg = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Venue_icon consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class User {
		public Integer uid {get;set;} 
		public String user_name {get;set;} 
		public String first_name {get;set;} 
		public String last_name {get;set;} 
		public String user_avatar {get;set;} 
		public Integer is_private {get;set;} 

		public User(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'uid') {
							uid = parser.getIntegerValue();
						} else if (text == 'user_name') {
							user_name = parser.getText();
						} else if (text == 'first_name') {
							first_name = parser.getText();
						} else if (text == 'last_name') {
							last_name = parser.getText();
						} else if (text == 'user_avatar') {
							user_avatar = parser.getText();
						} else if (text == 'is_private') {
							is_private = parser.getIntegerValue();
						} else {
							System.debug(LoggingLevel.WARN, 'User consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Location_Z {
		public String brewery_city {get;set;} 
		public String brewery_state {get;set;} 
		public Double lat {get;set;} 
		public Double lng {get;set;} 

		public Location_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'brewery_city') {
							brewery_city = parser.getText();
						} else if (text == 'brewery_state') {
							brewery_state = parser.getText();
						} else if (text == 'lat') {
							lat = parser.getDoubleValue();
						} else if (text == 'lng') {
							lng = parser.getDoubleValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Location_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Photo {
		public String photo_img_sm {get;set;} 
		public String photo_img_md {get;set;} 
		public String photo_img_lg {get;set;} 
		public String photo_img_og {get;set;} 

		public Photo(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'photo_img_sm') {
							photo_img_sm = parser.getText();
						} else if (text == 'photo_img_md') {
							photo_img_md = parser.getText();
						} else if (text == 'photo_img_lg') {
							photo_img_lg = parser.getText();
						} else if (text == 'photo_img_og') {
							photo_img_og = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Photo consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Source {
		public String app_name {get;set;} 
		public String app_website {get;set;} 

		public Source(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'app_name') {
							app_name = parser.getText();
						} else if (text == 'app_website') {
							app_website = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Source consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Beer {
		public Integer bid {get;set;} 
		public String beer_name {get;set;} 
		public String beer_label {get;set;} 
		public Integer beer_abv {get;set;} 
		public Integer beer_ibu {get;set;} 
		public String beer_slug {get;set;} 
		public String beer_description {get;set;} 
		public Integer is_in_production {get;set;} 
		public Integer beer_style_id {get;set;} 
		public String beer_style {get;set;} 
		public Double rating_score {get;set;} 
		public Integer rating_count {get;set;} 
		public Integer count {get;set;} 
		public Integer beer_active {get;set;} 
		public Boolean on_list {get;set;} 
		public Boolean has_had {get;set;} 

		public Beer(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'bid') {
							bid = parser.getIntegerValue();
						} else if (text == 'beer_name') {
							beer_name = parser.getText();
						} else if (text == 'beer_label') {
							beer_label = parser.getText();
						} else if (text == 'beer_abv') {
							beer_abv = parser.getIntegerValue();
						} else if (text == 'beer_ibu') {
							beer_ibu = parser.getIntegerValue();
						} else if (text == 'beer_slug') {
							beer_slug = parser.getText();
						} else if (text == 'beer_description') {
							beer_description = parser.getText();
						} else if (text == 'is_in_production') {
							is_in_production = parser.getIntegerValue();
						} else if (text == 'beer_style_id') {
							beer_style_id = parser.getIntegerValue();
						} else if (text == 'beer_style') {
							beer_style = parser.getText();
						} else if (text == 'rating_score') {
							rating_score = parser.getDoubleValue();
						} else if (text == 'rating_count') {
							rating_count = parser.getIntegerValue();
						} else if (text == 'count') {
							count = parser.getIntegerValue();
						} else if (text == 'beer_active') {
							beer_active = parser.getIntegerValue();
						} else if (text == 'on_list') {
							on_list = parser.getBooleanValue();
						} else if (text == 'has_had') {
							has_had = parser.getBooleanValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Beer consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Pagination {
		public String since_url {get;set;} 
		public String next_url {get;set;} 
		public Integer max_id {get;set;} 

		public Pagination(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'since_url') {
							since_url = parser.getText();
						} else if (text == 'next_url') {
							next_url = parser.getText();
						} else if (text == 'max_id') {
							max_id = parser.getIntegerValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Pagination consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Media_Z {
		public Integer count {get;set;} 
		public List<Items_Y> items {get;set;} 

		public Media_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'count') {
							count = parser.getIntegerValue();
						} else if (text == 'items') {
							items = arrayOfItems_Y(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Media_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class User_Y {
		public Integer uid {get;set;} 
		public String user_name {get;set;} 
		public String first_name {get;set;} 
		public String last_name {get;set;} 
		public String bio {get;set;} 
		public String location {get;set;} 
		public String relationship {get;set;} 
		public String user_avatar {get;set;} 
		public String account_type {get;set;} 
		public List<Notifications> venue_details {get;set;} 
		public List<Notifications> brewery_details {get;set;} 

		public User_Y(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'uid') {
							uid = parser.getIntegerValue();
						} else if (text == 'user_name') {
							user_name = parser.getText();
						} else if (text == 'first_name') {
							first_name = parser.getText();
						} else if (text == 'last_name') {
							last_name = parser.getText();
						} else if (text == 'bio') {
							bio = parser.getText();
						} else if (text == 'location') {
							location = parser.getText();
						} else if (text == 'relationship') {
							relationship = parser.getText();
						} else if (text == 'user_avatar') {
							user_avatar = parser.getText();
						} else if (text == 'account_type') {
							account_type = parser.getText();
						} else if (text == 'venue_details') {
							venue_details = arrayOfNotifications(parser);
						} else if (text == 'brewery_details') {
							brewery_details = arrayOfNotifications(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'User_Y consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Media_Y {
		public Integer count {get;set;} 
		public List<Notifications> items {get;set;} 

		public Media_Y(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'count') {
							count = parser.getIntegerValue();
						} else if (text == 'items') {
							items = arrayOfNotifications(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Media_Y consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class User_Z {
		public Integer uid {get;set;} 
		public String user_name {get;set;} 
		public String first_name {get;set;} 
		public String last_name {get;set;} 
		public Object relationship {get;set;} 
		public Integer is_supporter {get;set;} 
		public String user_avatar {get;set;} 
		public Integer is_private {get;set;} 

		public User_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'uid') {
							uid = parser.getIntegerValue();
						} else if (text == 'user_name') {
							user_name = parser.getText();
						} else if (text == 'first_name') {
							first_name = parser.getText();
						} else if (text == 'last_name') {
							last_name = parser.getText();
						} else if (text == 'relationship') {
							relationship = parser.readValueAs(Object.class);
						} else if (text == 'is_supporter') {
							is_supporter = parser.getIntegerValue();
						} else if (text == 'user_avatar') {
							user_avatar = parser.getText();
						} else if (text == 'is_private') {
							is_private = parser.getIntegerValue();
						} else {
							System.debug(LoggingLevel.WARN, 'User_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Items {
		public String category_name {get;set;} 
		public String category_id {get;set;} 
		public Boolean is_primary {get;set;} 

		public Items(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'category_name') {
							category_name = parser.getText();
						} else if (text == 'category_id') {
							category_id = parser.getText();
						} else if (text == 'is_primary') {
							is_primary = parser.getBooleanValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Items consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Venue_Z {
		public Integer venue_id {get;set;} 
		public String venue_name {get;set;} 
		public String venue_slug {get;set;} 
		public String last_updated {get;set;} 
		public String primary_category {get;set;} 
		public Categories categories {get;set;} 
		public Stats stats {get;set;} 
		public Venue_icon venue_icon {get;set;} 
		public Boolean public_venue {get;set;} 
		public Location location {get;set;} 
		public Contact contact {get;set;} 
		public Foursquare foursquare {get;set;} 
		public Media media {get;set;} 
		public Checkins checkins {get;set;} 
		public Top_beers top_beers {get;set;} 
		public Media_Y brewery_locations {get;set;} 
		public Boolean is_verified {get;set;} 
		public Boolean is_closed {get;set;} 

		public Venue_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'venue_id') {
							venue_id = parser.getIntegerValue();
						} else if (text == 'venue_name') {
							venue_name = parser.getText();
						} else if (text == 'venue_slug') {
							venue_slug = parser.getText();
						} else if (text == 'last_updated') {
							last_updated = parser.getText();
						} else if (text == 'primary_category') {
							primary_category = parser.getText();
						} else if (text == 'categories') {
							categories = new Categories(parser);
						} else if (text == 'stats') {
							stats = new Stats(parser);
						} else if (text == 'venue_icon') {
							venue_icon = new Venue_icon(parser);
						} else if (text == 'public_venue') {
							public_venue = parser.getBooleanValue();
						} else if (text == 'location') {
							location = new Location(parser);
						} else if (text == 'contact') {
							contact = new Contact(parser);
						} else if (text == 'foursquare') {
							foursquare = new Foursquare(parser);
						} else if (text == 'media') {
							media = new Media(parser);
						} else if (text == 'checkins') {
							checkins = new Checkins(parser);
						} else if (text == 'top_beers') {
							top_beers = new Top_beers(parser);
						} else if (text == 'brewery_locations') {
							brewery_locations = new Media_Y(parser);
						} else if (text == 'is_verified') {
							is_verified = parser.getBooleanValue();
						} else if (text == 'is_closed') {
							is_closed = parser.getBooleanValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Venue_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Brewery {
		public Integer brewery_id {get;set;} 
		public String brewery_name {get;set;} 
		public String brewery_slug {get;set;} 
		public String brewery_page_url {get;set;} 
		public String brewery_label {get;set;} 
		public String country_name {get;set;} 
		public Contact_Z contact {get;set;} 
		public Location_Z location {get;set;} 
		public Integer brewery_active {get;set;} 

		public Brewery(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'brewery_id') {
							brewery_id = parser.getIntegerValue();
						} else if (text == 'brewery_name') {
							brewery_name = parser.getText();
						} else if (text == 'brewery_slug') {
							brewery_slug = parser.getText();
						} else if (text == 'brewery_page_url') {
							brewery_page_url = parser.getText();
						} else if (text == 'brewery_label') {
							brewery_label = parser.getText();
						} else if (text == 'country_name') {
							country_name = parser.getText();
						} else if (text == 'contact') {
							contact = new Contact_Z(parser);
						} else if (text == 'location') {
							location = new Location_Z(parser);
						} else if (text == 'brewery_active') {
							brewery_active = parser.getIntegerValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Brewery consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Items_Z {
		public Integer photo_id {get;set;} 
		public Photo photo {get;set;} 
		public String created_at {get;set;} 
		public Integer checkin_id {get;set;} 
		public Beer beer {get;set;} 
		public Brewery brewery {get;set;} 
		public User user {get;set;} 
		public Venue venue {get;set;} 

		public Items_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'photo_id') {
							photo_id = parser.getIntegerValue();
						} else if (text == 'photo') {
							photo = new Photo(parser);
						} else if (text == 'created_at') {
							created_at = parser.getText();
						} else if (text == 'checkin_id') {
							checkin_id = parser.getIntegerValue();
						} else if (text == 'beer') {
							beer = new Beer(parser);
						} else if (text == 'brewery') {
							brewery = new Brewery(parser);
						} else if (text == 'user') {
							user = new User(parser);
						} else if (text == 'venue') {
							venue = new Venue(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Items_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Toasts_Z {
		public Integer total_count {get;set;} 
		public Integer count {get;set;} 
		public Object auth_toast {get;set;} 
		public List<Items_W> items {get;set;} 

		public Toasts_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'total_count') {
							total_count = parser.getIntegerValue();
						} else if (text == 'count') {
							count = parser.getIntegerValue();
						} else if (text == 'auth_toast') {
							auth_toast = parser.readValueAs(Object.class);
						} else if (text == 'items') {
							items = arrayOfItems_W(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Toasts_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Items_Y {
		public Integer photo_id {get;set;} 
		public Photo photo {get;set;} 

		public Items_Y(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'photo_id') {
							photo_id = parser.getIntegerValue();
						} else if (text == 'photo') {
							photo = new Photo(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Items_Y consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Items_X {
		public Integer checkin_id {get;set;} 
		public String created_at {get;set;} 
		public Integer rating_score {get;set;} 
		public String checkin_comment {get;set;} 
		public User_Z user {get;set;} 
		public Beer_Y beer {get;set;} 
		public Brewery_Z brewery {get;set;} 
		public Venue venue {get;set;} 
		public Comments comments {get;set;} 
		public Toasts toasts {get;set;} 
		public Media_Z media {get;set;} 
		public Source source {get;set;} 
		public Badges badges {get;set;} 

		public Items_X(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'checkin_id') {
							checkin_id = parser.getIntegerValue();
						} else if (text == 'created_at') {
							created_at = parser.getText();
						} else if (text == 'rating_score') {
							rating_score = parser.getIntegerValue();
						} else if (text == 'checkin_comment') {
							checkin_comment = parser.getText();
						} else if (text == 'user') {
							user = new User_Z(parser);
						} else if (text == 'beer') {
							beer = new Beer_Y(parser);
						} else if (text == 'brewery') {
							brewery = new Brewery_Z(parser);
						} else if (text == 'venue') {
							venue = new Venue(parser);
						} else if (text == 'comments') {
							comments = new Comments(parser);
						} else if (text == 'toasts') {
							toasts = new Toasts(parser);
						} else if (text == 'media') {
							media = new Media_Z(parser);
						} else if (text == 'source') {
							source = new Source(parser);
						} else if (text == 'badges') {
							badges = new Badges(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Items_X consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Badges_Z {
		public Boolean retro_status {get;set;} 
		public Integer count {get;set;} 
		public List<Items_V> items {get;set;} 

		public Badges_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'retro_status') {
							retro_status = parser.getBooleanValue();
						} else if (text == 'count') {
							count = parser.getIntegerValue();
						} else if (text == 'items') {
							items = arrayOfItems_V(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Badges_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Items_W {
		public Integer uid {get;set;} 
		public User_Y user {get;set;} 
		public Integer like_id {get;set;} 
		public Boolean like_owner {get;set;} 
		public String created_at {get;set;} 

		public Items_W(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'uid') {
							uid = parser.getIntegerValue();
						} else if (text == 'user') {
							user = new User_Y(parser);
						} else if (text == 'like_id') {
							like_id = parser.getIntegerValue();
						} else if (text == 'like_owner') {
							like_owner = parser.getBooleanValue();
						} else if (text == 'created_at') {
							created_at = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Items_W consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Venue {
		public Integer venue_id {get;set;} 
		public String venue_name {get;set;} 
		public String venue_slug {get;set;} 
		public String primary_category_key {get;set;} 
		public String primary_category {get;set;} 
		public String parent_category_id {get;set;} 
		public Categories categories {get;set;} 
		public Location location {get;set;} 
		public Contact_Y contact {get;set;} 
		public Foursquare foursquare {get;set;} 
		public Venue_icon venue_icon {get;set;} 
		public Boolean is_verified {get;set;} 

		public Venue(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'venue_id') {
							venue_id = parser.getIntegerValue();
						} else if (text == 'venue_name') {
							venue_name = parser.getText();
						} else if (text == 'venue_slug') {
							venue_slug = parser.getText();
						} else if (text == 'primary_category_key') {
							primary_category_key = parser.getText();
						} else if (text == 'primary_category') {
							primary_category = parser.getText();
						} else if (text == 'parent_category_id') {
							parent_category_id = parser.getText();
						} else if (text == 'categories') {
							categories = new Categories(parser);
						} else if (text == 'location') {
							location = new Location(parser);
						} else if (text == 'contact') {
							contact = new Contact_Y(parser);
						} else if (text == 'foursquare') {
							foursquare = new Foursquare(parser);
						} else if (text == 'venue_icon') {
							venue_icon = new Venue_icon(parser);
						} else if (text == 'is_verified') {
							is_verified = parser.getBooleanValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Venue consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Categories {
		public Integer count {get;set;} 
		public List<Items> items {get;set;} 

		public Categories(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'count') {
							count = parser.getIntegerValue();
						} else if (text == 'items') {
							items = arrayOfItems(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Categories consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Comments {
		public Integer total_count {get;set;} 
		public Integer count {get;set;} 
		public List<Notifications> items {get;set;} 

		public Comments(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'total_count') {
							total_count = parser.getIntegerValue();
						} else if (text == 'count') {
							count = parser.getIntegerValue();
						} else if (text == 'items') {
							items = arrayOfNotifications(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Comments consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Media {
		public Integer count {get;set;} 
		public List<Items_Z> items {get;set;} 

		public Media(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'count') {
							count = parser.getIntegerValue();
						} else if (text == 'items') {
							items = arrayOfItems_Z(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Media consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Contact_X {
		public String twitter {get;set;} 
		public String facebook {get;set;} 
		public String instagram {get;set;} 
		public String url {get;set;} 

		public Contact_X(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'twitter') {
							twitter = parser.getText();
						} else if (text == 'facebook') {
							facebook = parser.getText();
						} else if (text == 'instagram') {
							instagram = parser.getText();
						} else if (text == 'url') {
							url = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Contact_X consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Init_time {
		public Integer time_x {get;set;} 
		public String measure {get;set;} 

		public Init_time(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'time') {
							time_x = parser.getIntegerValue();
						} else if (text == 'measure') {
							measure = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Init_time consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Contact_Y {
		public String twitter {get;set;} 
		public String venue_url {get;set;} 

		public Contact_Y(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'twitter') {
							twitter = parser.getText();
						} else if (text == 'venue_url') {
							venue_url = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Contact_Y consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public Meta meta {get;set;} 
	public List<Notifications> notifications {get;set;} 
	public Response response {get;set;} 

	public Untapped(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'meta') {
						meta = new Meta(parser);
					} else if (text == 'notifications') {
						notifications = arrayOfNotifications(parser);
					} else if (text == 'response') {
						response = new Response(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'Untapped consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Contact_Z {
		public String twitter {get;set;} 
		public String facebook {get;set;} 
		public String url {get;set;} 

		public Contact_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'twitter') {
							twitter = parser.getText();
						} else if (text == 'facebook') {
							facebook = parser.getText();
						} else if (text == 'url') {
							url = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Contact_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Items_V {
		public Integer badge_id {get;set;} 
		public Integer user_badge_id {get;set;} 
		public String badge_name {get;set;} 
		public String badge_description {get;set;} 
		public String created_at {get;set;} 
		public Venue_icon badge_image {get;set;} 

		public Items_V(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'badge_id') {
							badge_id = parser.getIntegerValue();
						} else if (text == 'user_badge_id') {
							user_badge_id = parser.getIntegerValue();
						} else if (text == 'badge_name') {
							badge_name = parser.getText();
						} else if (text == 'badge_description') {
							badge_description = parser.getText();
						} else if (text == 'created_at') {
							created_at = parser.getText();
						} else if (text == 'badge_image') {
							badge_image = new Venue_icon(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Items_V consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Toasts {
		public Integer total_count {get;set;} 
		public Integer count {get;set;} 
		public Boolean auth_toast {get;set;} 
		public List<Notifications> items {get;set;} 

		public Toasts(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'total_count') {
							total_count = parser.getIntegerValue();
						} else if (text == 'count') {
							count = parser.getIntegerValue();
						} else if (text == 'auth_toast') {
							auth_toast = parser.getBooleanValue();
						} else if (text == 'items') {
							items = arrayOfNotifications(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Toasts consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Items_U {
		public String created_at {get;set;} 
		public Integer total_count {get;set;} 
		public Integer your_count {get;set;} 
		public Beer_Z beer {get;set;} 
		public Brewery brewery {get;set;} 
		public Media_Y friends {get;set;} 

		public Items_U(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'created_at') {
							created_at = parser.getText();
						} else if (text == 'total_count') {
							total_count = parser.getIntegerValue();
						} else if (text == 'your_count') {
							your_count = parser.getIntegerValue();
						} else if (text == 'beer') {
							beer = new Beer_Z(parser);
						} else if (text == 'brewery') {
							brewery = new Brewery(parser);
						} else if (text == 'friends') {
							friends = new Media_Y(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Items_U consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Contact {
		public String twitter {get;set;} 
		public String venue_url {get;set;} 
		public String facebook {get;set;} 
		public String yelp {get;set;} 

		public Contact(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'twitter') {
							twitter = parser.getText();
						} else if (text == 'venue_url') {
							venue_url = parser.getText();
						} else if (text == 'facebook') {
							facebook = parser.getText();
						} else if (text == 'yelp') {
							yelp = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Contact consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Brewery_Z {
		public Integer brewery_id {get;set;} 
		public String brewery_name {get;set;} 
		public String brewery_slug {get;set;} 
		public String brewery_page_url {get;set;} 
		public String brewery_type {get;set;} 
		public String brewery_label {get;set;} 
		public String country_name {get;set;} 
		public Contact_X contact {get;set;} 
		public Location_Z location {get;set;} 
		public Integer brewery_active {get;set;} 

		public Brewery_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'brewery_id') {
							brewery_id = parser.getIntegerValue();
						} else if (text == 'brewery_name') {
							brewery_name = parser.getText();
						} else if (text == 'brewery_slug') {
							brewery_slug = parser.getText();
						} else if (text == 'brewery_page_url') {
							brewery_page_url = parser.getText();
						} else if (text == 'brewery_type') {
							brewery_type = parser.getText();
						} else if (text == 'brewery_label') {
							brewery_label = parser.getText();
						} else if (text == 'country_name') {
							country_name = parser.getText();
						} else if (text == 'contact') {
							contact = new Contact_X(parser);
						} else if (text == 'location') {
							location = new Location_Z(parser);
						} else if (text == 'brewery_active') {
							brewery_active = parser.getIntegerValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Brewery_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Response {
		public Venue_Z venue {get;set;} 

		public Response(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'venue') {
							venue = new Venue_Z(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Response consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Checkins {
		public Integer count {get;set;} 
		public List<Items_X> items {get;set;} 
		public Pagination pagination {get;set;} 

		public Checkins(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'count') {
							count = parser.getIntegerValue();
						} else if (text == 'items') {
							items = arrayOfItems_X(parser);
						} else if (text == 'pagination') {
							pagination = new Pagination(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Checkins consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Beer_Y {
		public Integer bid {get;set;} 
		public String beer_name {get;set;} 
		public Integer beer_abv {get;set;} 
		public String beer_label {get;set;} 
		public String beer_slug {get;set;} 
		public String beer_style {get;set;} 
		public Integer beer_active {get;set;} 
		public Boolean has_had {get;set;} 

		public Beer_Y(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'bid') {
							bid = parser.getIntegerValue();
						} else if (text == 'beer_name') {
							beer_name = parser.getText();
						} else if (text == 'beer_abv') {
							beer_abv = parser.getIntegerValue();
						} else if (text == 'beer_label') {
							beer_label = parser.getText();
						} else if (text == 'beer_slug') {
							beer_slug = parser.getText();
						} else if (text == 'beer_style') {
							beer_style = parser.getText();
						} else if (text == 'beer_active') {
							beer_active = parser.getIntegerValue();
						} else if (text == 'has_had') {
							has_had = parser.getBooleanValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Beer_Y consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Beer_Z {
		public Integer bid {get;set;} 
		public String beer_name {get;set;} 
		public String beer_label {get;set;} 
		public Double beer_abv {get;set;} 
		public Integer beer_ibu {get;set;} 
		public String beer_slug {get;set;} 
		public String beer_description {get;set;} 
		public Integer is_in_production {get;set;} 
		public Integer beer_style_id {get;set;} 
		public String beer_style {get;set;} 
		public Double rating_score {get;set;} 
		public Integer rating_count {get;set;} 
		public Integer count {get;set;} 
		public Integer beer_active {get;set;} 
		public Boolean on_list {get;set;} 
		public Boolean has_had {get;set;} 

		public Beer_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'bid') {
							bid = parser.getIntegerValue();
						} else if (text == 'beer_name') {
							beer_name = parser.getText();
						} else if (text == 'beer_label') {
							beer_label = parser.getText();
						} else if (text == 'beer_abv') {
							beer_abv = parser.getDoubleValue();
						} else if (text == 'beer_ibu') {
							beer_ibu = parser.getIntegerValue();
						} else if (text == 'beer_slug') {
							beer_slug = parser.getText();
						} else if (text == 'beer_description') {
							beer_description = parser.getText();
						} else if (text == 'is_in_production') {
							is_in_production = parser.getIntegerValue();
						} else if (text == 'beer_style_id') {
							beer_style_id = parser.getIntegerValue();
						} else if (text == 'beer_style') {
							beer_style = parser.getText();
						} else if (text == 'rating_score') {
							rating_score = parser.getDoubleValue();
						} else if (text == 'rating_count') {
							rating_count = parser.getIntegerValue();
						} else if (text == 'count') {
							count = parser.getIntegerValue();
						} else if (text == 'beer_active') {
							beer_active = parser.getIntegerValue();
						} else if (text == 'on_list') {
							on_list = parser.getBooleanValue();
						} else if (text == 'has_had') {
							has_had = parser.getBooleanValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Beer_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Badges {
		public Boolean retro_status {get;set;} 
		public Integer count {get;set;} 
		public List<Notifications> items {get;set;} 

		public Badges(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'retro_status') {
							retro_status = parser.getBooleanValue();
						} else if (text == 'count') {
							count = parser.getIntegerValue();
						} else if (text == 'items') {
							items = arrayOfNotifications(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Badges consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Beer_X {
		public Integer bid {get;set;} 
		public String beer_name {get;set;} 
		public Double beer_abv {get;set;} 
		public String beer_label {get;set;} 
		public String beer_slug {get;set;} 
		public String beer_style {get;set;} 
		public Integer beer_active {get;set;} 
		public Boolean has_had {get;set;} 

		public Beer_X(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'bid') {
							bid = parser.getIntegerValue();
						} else if (text == 'beer_name') {
							beer_name = parser.getText();
						} else if (text == 'beer_abv') {
							beer_abv = parser.getDoubleValue();
						} else if (text == 'beer_label') {
							beer_label = parser.getText();
						} else if (text == 'beer_slug') {
							beer_slug = parser.getText();
						} else if (text == 'beer_style') {
							beer_style = parser.getText();
						} else if (text == 'beer_active') {
							beer_active = parser.getIntegerValue();
						} else if (text == 'has_had') {
							has_had = parser.getBooleanValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Beer_X consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Stats {
		public Integer total_count {get;set;} 
		public Integer user_count {get;set;} 
		public Integer total_user_count {get;set;} 
		public Integer monthly_count {get;set;} 
		public Integer weekly_count {get;set;} 

		public Stats(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'total_count') {
							total_count = parser.getIntegerValue();
						} else if (text == 'user_count') {
							user_count = parser.getIntegerValue();
						} else if (text == 'total_user_count') {
							total_user_count = parser.getIntegerValue();
						} else if (text == 'monthly_count') {
							monthly_count = parser.getIntegerValue();
						} else if (text == 'weekly_count') {
							weekly_count = parser.getIntegerValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Stats consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Top_beers {
		public Integer offset {get;set;} 
		public Integer limit_Z {get;set;} // in json: limit
		public Integer count {get;set;} 
		public List<Items_U> items {get;set;} 

		public Top_beers(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'offset') {
							offset = parser.getIntegerValue();
						} else if (text == 'limit') {
							limit_Z = parser.getIntegerValue();
						} else if (text == 'count') {
							count = parser.getIntegerValue();
						} else if (text == 'items') {
							items = arrayOfItems_U(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Top_beers consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Response_time {
		public Double time_x {get;set;} 
		public String measure {get;set;} 

		public Response_time(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'time') {
							time_x = parser.getDoubleValue();
						} else if (text == 'measure') {
							measure = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Response_time consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Notifications {

		public Notifications(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						{
							System.debug(LoggingLevel.WARN, 'Notifications consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Foursquare {
		public String foursquare_id {get;set;} 
		public String foursquare_url {get;set;} 

		public Foursquare(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'foursquare_id') {
							foursquare_id = parser.getText();
						} else if (text == 'foursquare_url') {
							foursquare_url = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Foursquare consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Location {
		public String venue_address {get;set;} 
		public String venue_city {get;set;} 
		public String venue_state {get;set;} 
		public String venue_country {get;set;} 
		public Double lat {get;set;} 
		public Double lng {get;set;} 

		public Location(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'venue_address') {
							venue_address = parser.getText();
						} else if (text == 'venue_city') {
							venue_city = parser.getText();
						} else if (text == 'venue_state') {
							venue_state = parser.getText();
						} else if (text == 'venue_country') {
							venue_country = parser.getText();
						} else if (text == 'lat') {
							lat = parser.getDoubleValue();
						} else if (text == 'lng') {
							lng = parser.getDoubleValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Location consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static Untapped parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new Untapped(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	













    private static List<Items_U> arrayOfItems_U(System.JSONParser p) {
        List<Items_U> res = new List<Items_U>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Items_U(p));
        }
        return res;
    }













    private static List<Items_W> arrayOfItems_W(System.JSONParser p) {
        List<Items_W> res = new List<Items_W>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Items_W(p));
        }
        return res;
    }








    private static List<Items_X> arrayOfItems_X(System.JSONParser p) {
        List<Items_X> res = new List<Items_X>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Items_X(p));
        }
        return res;
    }





    private static List<Items_V> arrayOfItems_V(System.JSONParser p) {
        List<Items_V> res = new List<Items_V>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Items_V(p));
        }
        return res;
    }










    private static List<Items_Z> arrayOfItems_Z(System.JSONParser p) {
        List<Items_Z> res = new List<Items_Z>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Items_Z(p));
        }
        return res;
    }


    private static List<Notifications> arrayOfNotifications(System.JSONParser p) {
        List<Notifications> res = new List<Notifications>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Notifications(p));
        }
        return res;
    }








    private static List<Items_Y> arrayOfItems_Y(System.JSONParser p) {
        List<Items_Y> res = new List<Items_Y>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Items_Y(p));
        }
        return res;
    }





    private static List<Items> arrayOfItems(System.JSONParser p) {
        List<Items> res = new List<Items>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Items(p));
        }
        return res;
    }
}